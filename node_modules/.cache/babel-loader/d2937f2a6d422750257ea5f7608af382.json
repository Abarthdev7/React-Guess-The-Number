{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abart\\\\Desktop\\\\Dark Cloud\\\\guess-number\\\\src\\\\components\\\\mainStr\\\\Content.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secretNumber = Math.floor(Math.random() * 20) + 1;\n\nfunction Content(props) {\n  _s();\n\n  let [score, setScore] = useState(20);\n  const [highscore, setHighscore] = useState('0');\n  const [message, setMessage] = useState('Start guessing . . .');\n  const [guess, setGuess] = useState(''); // let scores = 20\n  // let highScore = 0\n\n  const inputHandler = event => {\n    setGuess(event.target.value);\n  };\n\n  console.log(guess);\n\n  const check = () => {\n    if (secretNumber == guess) {\n      setMessage('Ftanei re');\n      return score;\n    } else if (guess > secretNumber) {\n      setMessage('Kateva re');\n      return score - 1;\n    } else if (guess < secretNumber) {\n      setMessage('Aneva re');\n      return score - 1;\n    }\n  };\n\n  console.log(secretNumber);\n\n  const checkHandler = () => {\n    setScore(check);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"guess\",\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: checkHandler,\n        children: \"Check!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label-score\",\n        children: [props.score, \" \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label-score\",\n        children: [props.highscore, \" \", highscore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Content, \"GrkU9uPR85ZIMmF2ANrQ1zQGDh4=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["C:/Users/abart/Desktop/Dark Cloud/guess-number/src/components/mainStr/Content.jsx"],"names":["React","useState","secretNumber","Math","floor","random","Content","props","score","setScore","highscore","setHighscore","message","setMessage","guess","setGuess","inputHandler","event","target","value","console","log","check","checkHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAtD;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,GAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,sBAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CAJoB,CAMpB;AACA;;AAEA,QAAMe,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AAEH,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AACA,QAAMQ,KAAK,GAAG,MAAM;AAEhB,QAAIpB,YAAY,IAAIY,KAApB,EAA2B;AACvBD,MAAAA,UAAU,CAAC,WAAD,CAAV;AACA,aAAOL,KAAP;AACH,KAHD,MAGO,IAAIM,KAAK,GAAGZ,YAAZ,EAA0B;AAC7BW,MAAAA,UAAU,CAAC,WAAD,CAAV;AACA,aAAOL,KAAK,GAAG,CAAf;AACH,KAHM,MAGA,IAAIM,KAAK,GAAGZ,YAAZ,EAA0B;AAC7BW,MAAAA,UAAU,CAAC,UAAD,CAAV;AACA,aAAOL,KAAK,GAAG,CAAf;AACH;AAGJ,GAdD;;AAgBAY,EAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAZ;;AACA,QAAMqB,YAAY,GAAG,MAAM;AACvBd,IAAAA,QAAQ,CAACa,KAAD,CAAR;AACH,GAFD;;AAMA,sBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BAEI;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,OAA/B;AAAuC,QAAA,QAAQ,EAAEN;AAAjD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEO,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA,kBAAwBX;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,mBAA4BL,KAAK,CAACC,KAAlC,OAA0CA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,mBAA4BD,KAAK,CAACG,SAAlC,OAA8CA,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GArDQJ,O;;KAAAA,O;AAuDT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst secretNumber = Math.floor(Math.random() * 20) + 1\r\n\r\n\r\nfunction Content(props) {\r\n    let [score, setScore] = useState(20)\r\n    const [highscore, setHighscore] = useState('0')\r\n    const [message, setMessage] = useState('Start guessing . . .')\r\n    const [guess, setGuess] = useState('')\r\n\r\n    // let scores = 20\r\n    // let highScore = 0\r\n\r\n    const inputHandler = (event) => {\r\n        setGuess(event.target.value)\r\n\r\n    }\r\n\r\n    console.log(guess)\r\n    const check = () => {\r\n\r\n        if (secretNumber == guess) {\r\n            setMessage('Ftanei re')\r\n            return score\r\n        } else if (guess > secretNumber) {\r\n            setMessage('Kateva re')\r\n            return score - 1\r\n        } else if (guess < secretNumber) {\r\n            setMessage('Aneva re')\r\n            return score - 1\r\n        }\r\n\r\n\r\n    }\r\n\r\n    console.log(secretNumber)\r\n    const checkHandler = () => {\r\n        setScore(check)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <main className='main-content'>\r\n\r\n            <section className='left'>\r\n                <input type=\"number\" className='guess' onChange={inputHandler} />\r\n                <button className='btn' onClick={checkHandler}>Check!</button>\r\n            </section>\r\n\r\n            <section className='right'>\r\n                <p className='message'>{message}</p>\r\n                <p className='label-score'>{props.score} {score}</p>\r\n                <p className='label-score'>{props.highscore} {highscore}</p>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}